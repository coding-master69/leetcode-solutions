Q - https://leetcode.com/problems/find-the-duplicate-number/
//Brute-Force - O(n^2)
class Solution {
    public int findDuplicate(int[] nums) {
        for(int i = 0; i < nums.length; i++){
            for(int j = i+1; j < nums.length; j++){
                if(nums[i] == nums[j])
                    return nums[i];
            }
        }
        return -1;
            
    }
}

//Optimized - O(n)
//space - O(1)
class Solution {
    public int findDuplicate(int[] nums) {
        int res = -1;
        for(int i = 0; i < nums.length; i++){
            int curr = Math.abs(nums[i]);
            if(nums[curr] < 0){
                res = curr;
                break;
            }
            nums[curr] *= -1;
        }
        
        for(int i = 0; i < nums.length; i++)
            nums[i] = Math.abs(nums[i]);
        
        return res;
    }
}

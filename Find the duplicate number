Q - https://leetcode.com/problems/find-the-duplicate-number/
//Brute-Force - O(n^2)
class Solution {
    public int findDuplicate(int[] nums) {
        for(int i = 0; i < nums.length; i++){
            for(int j = i+1; j < nums.length; j++){
                if(nums[i] == nums[j])
                    return nums[i];
            }
        }
        return -1;
            
    }
}

//Optimized - O(n)
//space - O(1)
class Solution {
    public int findDuplicate(int[] nums) {
        int slow = 0, fast = 0;
        do{
            slow = nums[slow];
            fast = nums[nums[fast]];
            
        }while(slow != fast);
        
        int slow2 = 0;
        while(slow != slow2){
            slow = nums[slow];
            slow2 = nums[slow2];
        }
        return slow2;
    }
}

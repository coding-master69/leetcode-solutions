Ques - https://leetcode.com/problems/min-cost-climbing-stairs/


class Solution {
    
    int cost[];
    int[] dp;
    
    public int minCostClimbingStairs(int[] cost) {
        this.cost = cost;
        dp = new int[cost.length];
        Arrays.fill(dp,-1);
        int answer = Math.min(minCostRecursion(0,0), minCostRecursion(0, 1));
        //System.out.println(Arrays.toString(dp));
        return answer;
    }
    
    private int minCostRecursion(int sum, int index){
        if(index >= cost.length) return 0;
        
        if(dp[index] != -1)
            return dp[index];
        dp[index] = cost[index] + Math.min(minCostRecursion(sum+cost[index], index+1), minCostRecursion(sum+cost[index], index+2));

        return dp[index];         
    }
    
}

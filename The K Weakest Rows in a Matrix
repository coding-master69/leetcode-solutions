Ques - https://leetcode.com/problems/the-k-weakest-rows-in-a-matrix/


class Solution {
    public int[] kWeakestRows(int[][] mat, int k) {
        int soldiers[] = new int[mat.length];
        
        for (int i = 0; i < mat.length; i++) {
            int left = 0;
            int right = mat[i].length - 1;
            while (left <= right) {
                int mid = (left + right) / 2;
                if (mat[i][mid] == 0) {
                    if (mid - 1 < 0 || mat[i][mid - 1] == 1) {
                        soldiers[i] = mid;
                        break;
                    }
                    right = mid - 1;
                }
                else {
                    left = mid + 1;
                }
            }
            if (left > right) {
                soldiers[i] = mat[i].length;
            }
        }
        
        int rank[] = new int[soldiers.length];
        
        for (int i = 0; i < soldiers.length; i++) {
            for (int j = i + 1; j < soldiers.length; j++) {
                if (soldiers[i] > soldiers[j]) {
                    rank[i]++;
                }
                else {
                    rank[j]++;
                }
            }
        }
        
        int ans[] = new int[k];
        for (int i = 0; i < rank.length; i++) {
            if (rank[i] < k) {
                ans[rank[i]] = i;
            }
        }
        return ans;
    }
}

Ques - https://leetcode.com/problems/implement-trie-prefix-tree/


class Trie {
    
    Node root = new Node();

    public Trie() {
        root = new Node();
    }
    
    public void insert(String word) {
        Node node = root;
        for(int i = 0; i < word.length(); i++){
            char ch = word.charAt(i);
            if(!node.containsKey(ch))
                node.set(ch);
            node = node.get(ch);
        }
        node.setEnd();
    }
    
    public boolean search(String word) {
        Node node = root;
        for(int i = 0; i < word.length(); i++){
            char ch = word.charAt(i);
            if(node.containsKey(ch)){
                node = node.get(ch);
            }else
                return false;
        }
        return node.isEnd();
        
    }
    
    public boolean startsWith(String prefix) {
        Node node = root;
        for(int i = 0; i < prefix.length(); i++){
            char ch = prefix.charAt(i);
            if(node.containsKey(ch)){
                node = node.get(ch);
            }else
                return false;
        }
        return true;
    }
}
class Node{
    Node alpha[];
    boolean flag;
    
    Node(){
        alpha = new Node[26];
        flag = false;
    }
    
    boolean containsKey(char alphabet){
        return alpha[alphabet-'a'] != null;
    }
    
    void setEnd(){
        flag = true;
    }
    
    Node get(char alphabet){
        return alpha[alphabet-'a'];
    }    
    
    void set(char alphabet){
        alpha[alphabet-'a'] = new Node();
    }
    boolean isEnd(){
        return flag;
    }
    
}

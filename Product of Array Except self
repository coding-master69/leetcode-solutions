Ques - https://leetcode.com/problems/product-of-array-except-self/


Using Division

class Solution {
    public int[] productExceptSelf(int[] nums) {
        int[] ans = new int[nums.length];
        long multi = 1;
        int m0 = 0;
        for(int i: nums){
            if(i == 0 )
                m0++;
            else
                multi *= i;
        }
        
        for(int i = 0; i < nums.length; i++){
            if(m0 > 1 || (m0==1 && nums[i]!=0))
                ans[i] = 0;
            else{
                if(nums[i] == 0)
                    ans[i] = (int)multi;
              
                else
                    ans[i] = (int)multi/nums[i];
            }
            
        }
        return ans;
    }
}

Without using Division, T - O(n), S - O(1)

class Solution {
    public int[] productExceptSelf(int[] nums) {
        int len = nums.length;
        int[] result = new int[len];
        
        result[0] = 1;
        result[len-1] = 1;
        int index = 1;
        int pre = 1;
        
        while(index < len){
            pre *= nums[index-1];
            result[index++]=pre;
        }
        
        int post = 1;
        index = (len-1)-1;
        while(index >= 0){
            post *= nums[index+1];
            result[index--] *= post;
        }
        return result;
    }
}

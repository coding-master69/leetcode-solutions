Ques - 

Approach 1 - O(magazine) + space- O(magazine)
class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        HashMap<Character, Integer> map = new HashMap();
        for(int i = 0; i < magazine.length(); i++){
            map.put(magazine.charAt(i), map.getOrDefault(magazine.charAt(i), 0)+1);
        }
        
        
        
        for(int i = 0; i < ransomNote.length(); i++){
            if(map.getOrDefault(ransomNote.charAt(i), 0) <= 0)
                return false;
            else{
                map.put(ransomNote.charAt(i), map.getOrDefault(ransomNote.charAt(i), 0)-1);
            }
        }
        return true;
    }
}



---Best Approach--- O(ransomNote) + O(1)
class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        
        if(ransomNote.length() > magazine.length())
            return false;
        
        int[] atoz = new int[26];
        
        for(char a: ransomNote.toCharArray()){
            int i = magazine.indexOf(a, atoz[a - 'a']);
            
            if(i == -1){
                return false;
            }
            
            atoz[a - 'a'] = i+1;
        }
        
        return true;
    }
}
